import pyautogui
import time
import psutil
import os
import subprocess

def import_registry_silently(reg_file):
    try:
        subprocess.run(["reg", "import", reg_file], check=True, stdout=subprocess.DEVNULL, stderr=subprocess.DEVNULL)
        print(f"Successfully imported: {reg_file}")
    except subprocess.CalledProcessError:
        print(f"Failed to import: {reg_file}")

def find_line_in_file(file_path, search_text):
    try:
        with open(file_path, "r", encoding="utf-8") as file:
            for line in file:
                if search_text in line:
                    print(f"Found: {line.strip()}")
                    return line.strip()
        print("Text not found.")
        return None
    except FileNotFoundError:
        print("File not found.")
        return None

def list_executables(folder_path):
    try:
        return [f for f in os.listdir(folder_path) if f.endswith('.reg')]
    except FileNotFoundError:
        print("Folder not found.")
        return []

def is_genshin_running():
    for process in psutil.process_iter(['pid', 'name']):
        if process.info['name'] == 'GenshinImpact.exe':
            return True
    return False

def launch_genshin():
    game_path = r"akebi\67ad8914ebc0cb27578663dc50e5124f.exe"
    if os.path.exists(game_path):
        print(f"Launching Genshin Impact: {game_path}")
        os.startfile(game_path)
    else:
        print("Genshin Impact executable not found. Please check the installation path.")

def click_image(image_path):
    try:
        location = pyautogui.locateCenterOnScreen(image_path, confidence=0.8)
        if location:
            pyautogui.press('esc')
            print(f"Clicked on image at {location}")
        else:
            print("Image not found on screen.")
    except Exception as e:
        print(f"An error occurred: {e}")

def is_name_in_file(file_path, name):
    try:
        with open(file_path, 'r', encoding="utf-8") as file:
            for line in file:
                if name in line:  # Check if the name exists in the line
                    return line.strip()  # Return the full line (without extra spaces/newlines)
        return None  # Return None if no match is found
    except FileNotFoundError:
        return None  # Return None if file is missing


def done_acc(image_path):
    try:
        location = pyautogui.locateCenterOnScreen(image_path, confidence=0.8)
        if location:
            os.system("taskkill /F /IM GenshinImpact.exe")
            for exe in os.listdir("registry_exports"):
                if is_name_in_file("donotdeletethisfile.txt", str(exe.split(".")[0])):
                    print(f"Already changed to {exe.split(".")[0]}. Skipping...")
                    continue
                else:    
                    with open("Done.txt", "a") as done_file:
                        done_file.write("\n" + str(find_line_in_file("account.txt", str(exe.split(".")[0]))))
                    with open("donotdeletethisfile.txt", "a") as do_not_delete_file:
                        do_not_delete_file.write("\n" + exe.split(".")[0])
                    break
                change_acc()    
    except Exception as e:
        print(f"An error occurred: {e}")

def change_acc():
    try:
        for exe in r"registry_exports":
            if is_name_in_file("donotdeletethisfile.txt", exe.split(".")[0]):
                continue
            print(f"Now changing to {exe.split(".")[0]}")
            import_registry_silently(rf"registry_exports\{exe}")
            break
    except Exception as e:
        print(f"An error occurred: {e}")

if __name__ == "__main__":
    while True:
        # if not is_genshin_running():
        #     print("Genshin Impact is not running. Launching...")
        #     launch_genshin()
        # else:
        #     print("Genshin Impact is already running.")
        # time.sleep(30)
        for _ in range(20):
            click_image(r"gi_image/gi_x2.png")
            click_image(r"gi_image/gi_x.png")
            click_image(r"gi_image/gi_x2.png")
            click_image(r"gi_image/gi_x.png")
            click_image(r"gi_image/gi_x2.png")
            click_image(r"gi_image/gi_x.png")
            done_acc(r"gi_image/gi_finished.png") #need to be done
            pyautogui.click(1162, 664)
            time.sleep(5)
